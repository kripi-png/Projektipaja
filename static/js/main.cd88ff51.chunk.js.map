{"version":3,"sources":["components/button.jsx","components/frontPage.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","props","state","active","currentState","this","setState","className","style","onClick","document","querySelectorAll","map","button","click","title","hoverInfo","src","img","alt","type","content","contentStyle","React","Component","ContentBox","width","height","allowFullScreen","frameBorder","mozallowfullscreen","webkitallowfullscreen","Error","FrontPage","left","top","transform","margin","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qOAEqBA,E,kDACnB,WAAaC,GAAS,IAAD,8BACnB,cAAOA,IACFC,MAAQ,CACXC,QAAQ,GAHS,E,0DAOnB,IAAMC,EAAeC,KAAKH,MAAMC,OAChCE,KAAKC,SAAS,CAAEH,QAASC,M,+BAEjB,IAAD,OACP,OACE,yBAAKG,UAAWF,KAAKH,MAAMC,OAAS,cAAe,SAAUK,MAAOH,KAAKJ,MAAMO,MAAOC,QAAU,WAAQ,YAAIC,SAASC,iBAAkB,iBAAkBC,KAAK,SAAAC,GAAY,OAAOA,EAAOC,WAAa,EAAKR,SAAS,CAACH,QAAS,EAAKD,MAAMC,WACtO,uBAAGY,MAAOV,KAAKJ,MAAMe,WAAW,yBAAKC,IAAKZ,KAAKJ,MAAMiB,IAAKC,IAAK,iBAC/D,kBAAC,EAAD,CAAYC,KAAMf,KAAKJ,MAAMmB,KAAMC,QAAShB,KAAKJ,MAAMoB,QAASC,aAAcjB,KAAKJ,MAAMqB,oB,GAf7DC,IAAMC,WAqBpCC,E,kDACJ,WAAaxB,GAAS,IAAD,8BACnB,cAAOA,IACFC,MAAQ,GAFM,E,qDAKnB,OAASG,KAAKJ,MAAMmB,MAClB,IAAK,OACH,OACE,yBAAKb,UAAW,aAAcC,MAAOH,KAAKJ,MAAMqB,cAAejB,KAAKJ,MAAMoB,SAG9E,IAAK,SACH,OACE,4BAAQN,MAAOV,KAAKJ,MAAMe,UAAWT,UAAW,aAAcC,MAAOH,KAAKJ,MAAMqB,aAAcI,MAAO,MAAOC,OAAQ,MAAOV,IAAKZ,KAAKJ,MAAMoB,QAASO,iBAAe,IAGvK,IAAK,QACH,OACE,yBAAKb,MAAOV,KAAKJ,MAAMe,UAAWG,IAAKd,KAAKJ,MAAMe,UAAWT,UAAW,aAAcU,IAAKZ,KAAKJ,MAAMoB,QAASb,MAAOH,KAAKJ,MAAMqB,eAGrI,IAAK,SACH,OACE,4BAAQL,IAAKZ,KAAKJ,MAAMoB,QAASN,MAAOV,KAAKJ,MAAMe,UAAUT,UAAW,aAAcC,MAAOH,KAAKJ,MAAMqB,aAAcO,YAAY,IAAIH,MAAM,MAAMC,OAAO,MAAMC,iBAAiB,EAAME,mBAAmB,OAAOC,sBAAsB,SAG1O,QACE,MAAM,IAAIC,MAAO,kE,GA5BAT,IAAMC,WCpBVS,E,uKAEjB,OACE,yBAAK1B,UAAU,QACb,kBAAC,EAAD,CACEW,IAAK,6EACLV,MAAO,CAAC0B,KAAM,KAAMC,IAAK,MAAOC,UAAW,yBAC3ChB,KAAM,SACNJ,UAAW,uBACXM,aAAc,CAAEe,OAAQ,OACxBhB,QAAS,+KAEX,kBAAC,EAAD,CACEH,IAAK,qEACLV,MAAO,CAAC0B,KAAM,SAAUC,IAAK,OAAQC,UAAW,yBAChDhB,KAAM,SACNJ,UAAW,oBACXM,aAAc,CAAEe,OAAQ,aACxBhB,QAAS,+KAEX,kBAAC,EAAD,CACEH,IAAK,sDACLV,MAAO,CAAC0B,KAAM,MAAOC,IAAK,MAAOC,UAAW,yBAC5Cd,aAAc,CAAEI,MAAO,OAAQC,OAAQ,QAASU,OAAQ,eACxDjB,KAAM,QACNJ,UAAW,UACXK,QAAS,oCAEX,kBAAC,EAAD,CACEH,IAAK,kCACLV,MAAO,CAAC0B,KAAM,MAAOC,IAAK,MAAOC,UAAW,yBAC5Cd,aAAc,CAAEI,MAAO,OAAQC,OAAQ,SACvCP,KAAM,SACNJ,UAAW,cACXK,QAAS,8CAEX,kBAAC,EAAD,CACEH,IAAK,kCACLV,MAAO,CAAC0B,KAAM,MAAOC,IAAK,MAAOC,UAAW,yBAC5Cd,aAAc,CAAEI,MAAO,OAAQC,OAAQ,SACvCP,KAAM,SACNJ,UAAW,cACXK,QAAS,8CAEX,kBAAC,EAAD,CACEH,IAAK,kCACLV,MAAO,CAAC0B,KAAM,MAAOC,IAAK,MAAOC,UAAW,yBAC5ChB,KAAM,SACNJ,UAAW,oBACXM,aAAc,GACdD,QAAS,+KAEX,kBAAC,EAAD,CACEH,IAAK,4DACLV,MAAO,CAAC0B,KAAM,MAAOC,IAAK,MAAOC,UAAW,yBAC5ChB,KAAM,SACNJ,UAAW,2BACXM,aAAc,GACdD,QAAS,oL,GA1DoBE,IAAMC,W,YCQ9Bc,MANf,WACE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFpC,SAASqC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.cd88ff51.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Button extends React.Component {\r\n  constructor( props ) {\r\n    super( props );\r\n    this.state = {\r\n      active: false\r\n    };\r\n  }\r\n  toggleClass() {\r\n    const currentState = this.state.active;\r\n    this.setState({ active: !currentState });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={this.state.active ? 'Button open': 'Button'} style={this.props.style} onClick={ () => { [...document.querySelectorAll( '.Button.open' )].map( button => { return button.click(); }); this.setState({active: !this.state.active}); }}>\r\n        <a title={this.props.hoverInfo}><img src={this.props.img} alt={'Content Box'}/></a>\r\n        <ContentBox type={this.props.type} content={this.props.content} contentStyle={this.props.contentStyle}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ContentBox extends React.Component {\r\n  constructor( props ) {\r\n    super( props )\r\n    this.state = {}\r\n  }\r\n  render() {\r\n    switch ( this.props.type ) {\r\n      case 'text':\r\n        return(\r\n          <div className={'contentBox'} style={this.props.contentStyle}>{this.props.content}</div>\r\n        );\r\n\r\n      case 'iframe':\r\n        return(\r\n          <iframe title={this.props.hoverInfo} className={'contentBox'} style={this.props.contentStyle} width={'420'} height={'315'} src={this.props.content} allowFullScreen></iframe>\r\n        );\r\n\r\n      case 'image':\r\n        return(\r\n          <img title={this.props.hoverInfo} alt={this.props.hoverInfo} className={'contentBox'} src={this.props.content} style={this.props.contentStyle}/>\r\n        );\r\n\r\n      case 'slides':\r\n        return(\r\n          <iframe src={this.props.content} title={this.props.hoverInfo}className={'contentBox'} style={this.props.contentStyle} frameBorder=\"0\" width=\"480\" height=\"299\" allowFullScreen={true} mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\"></iframe>\r\n        );\r\n\r\n      default:\r\n        throw new Error( 'Invalid Button Type - must be \"text\", \"iframe\" or \"image\"' );\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Button from './button';\r\n\r\nexport default class FrontPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <Button\r\n          img={'https://upload.wikimedia.org/wikipedia/commons/b/b9/Group_font_awesome.svg'}\r\n          style={{left: \"4%\", top: \"10%\", transform: 'translate(-50%, -50%)'}}\r\n          type={'slides'}\r\n          hoverInfo={'Ryhmäyttäminen'}\r\n          contentStyle={{ margin: \"0 0\" }}\r\n          content={'https://docs.google.com/presentation/d/e/2PACX-1vT3reFsprMQH9rFI9rROMjQiMLkTtT1V0dTGPNdOY1LeoBZ02RCBIVpn_QFol3Rlw87L7yqfQ3OhS0P/embed?start=false&loop=false&delayms=15000'}\r\n        />\r\n        <Button\r\n          img={'https://icon-library.com/images/info-icon-svg/info-icon-svg-27.jpg'}\r\n          style={{left: \"48.5vw\", top: \"27vh\", transform: 'translate(-50%, -50%)'}}\r\n          type={'slides'}\r\n          hoverInfo={'Infoa IOVT:stä'}\r\n          contentStyle={{ margin: \"0 -200px \" }}\r\n          content={'https://docs.google.com/presentation/d/e/2PACX-1vQBWvGXfHpje0w_bnQinYYtx2z2CfTHZnkNy606IqN2V7N2sJTtBAqyHDVOHaboyu7_3Hn3KspEZTX-/embed?start=false&loop=false&delayms=15000'}\r\n        />\r\n        <Button\r\n          img={'http://simpleicon.com/wp-content/uploads/camera.png'}\r\n          style={{left: \"35%\", top: \"40%\", transform: 'translate(-50%, -50%)'}}\r\n          contentStyle={{ width: \"auto\", height: '500px', margin: '-250px 70px' }}\r\n          type={'image'}\r\n          hoverInfo={'Posteri'}\r\n          content={'https://i.imgur.com/XNDsEp8.jpg'}\r\n        />\r\n        <Button\r\n          img={'https://i.imgur.com/OAC7N2v.png'}\r\n          style={{left: \"50%\", top: \"45%\", transform: 'translate(-50%, -50%)'}}\r\n          contentStyle={{ width: \"auto\", height: '300px' }}\r\n          type={'iframe'}\r\n          hoverInfo={'Esitysvideo'}\r\n          content={'https://www.youtube.com/embed/B1YV_1KzVwA'}\r\n        />\r\n        <Button\r\n          img={'https://i.imgur.com/OAC7N2v.png'}\r\n          style={{left: \"60%\", top: \"40%\", transform: 'translate(-50%, -50%)'}}\r\n          contentStyle={{ width: \"auto\", height: '300px' }}\r\n          type={'iframe'}\r\n          hoverInfo={'Esitysvideo'}\r\n          content={'https://www.youtube.com/embed/WlterZVnGDA'}\r\n        />\r\n        <Button\r\n          img={'https://i.imgur.com/BgYdbVL.png'}\r\n          style={{left: \"20%\", top: \"15%\", transform: 'translate(-50%, -50%)'}}\r\n          type={'slides'}\r\n          hoverInfo={'Aikatauluttaminen'}\r\n          contentStyle={{}}\r\n          content={'https://docs.google.com/presentation/d/e/2PACX-1vTEub7axS1Mg56nJclLZqfXiLEqoQxIEkOpLu7mMQtYZSm3On7VuWS9FzZtmhwe_pnrVOm-j6I1ym4i/embed?start=false&loop=false&delayms=15000'}\r\n        />\r\n        <Button\r\n          img={'https://image.flaticon.com/icons/png/512/1600/1600977.png'}\r\n          style={{left: \"20%\", top: \"25%\", transform: 'translate(-50%, -50%)'}}\r\n          type={'slides'}\r\n          hoverInfo={'Tietoteknilliset  taidot'}\r\n          contentStyle={{}}\r\n          content={'https://docs.google.com/presentation/d/e/2PACX-1vTcVjRnCRg_DDaV1hcJ4Zt1rjVVbX9_Jp0JFOooHUB7Q50mIHbBu1H_3zGsBK5EngV-_7Qvxk8RaORL/embed?start=false&loop=false&delayms=15000'}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport FrontPage from './components/frontPage';\r\nimport './style/css/index.css';\r\nimport './style/css/normalize.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <FrontPage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}